// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package psqlc

import (
	"context"
)

// iteratorForBulkInsertGBPostcodePoints implements pgx.CopyFromSource.
type iteratorForBulkInsertGBPostcodePoints struct {
	rows                 []BulkInsertGBPostcodePointsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBulkInsertGBPostcodePoints) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBulkInsertGBPostcodePoints) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].Code,
		r.rows[0].Point,
	}, nil
}

func (r iteratorForBulkInsertGBPostcodePoints) Err() error {
	return nil
}

// BulkInsertGBPostcodePoints
//
//	INSERT INTO gb_postcode_points (code, point) VALUES ($1, $2)
func (q *Queries) BulkInsertGBPostcodePoints(ctx context.Context, db DBTX, arg []BulkInsertGBPostcodePointsParams) (int64, error) {
	return db.CopyFrom(ctx, []string{"gb_postcode_points"}, []string{"code", "point"}, &iteratorForBulkInsertGBPostcodePoints{rows: arg})
}
