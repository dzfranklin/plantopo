{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.0",
    "title": "PlanTopo API",
    "description": "Internal API for PlanTopo.com"
  },
  "servers": [
    {
      "url": "https://api.plantopo.com/api/v1",
      "description": "Production"
    },
    {
      "url": "http://localhost:4000/api/v1",
      "description": "Local development"
    }
  ],
  "security": [
    {},
    {
      "bearer": []
    },
    {
      "browser": []
    }
  ],
  "tags": [
    {
      "name": "auth"
    },
    {
      "name": "elevation"
    }
  ],
  "paths": {
    "/auth/check": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Check if you are authenticated",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userID": {
                      "$ref": "#/components/schemas/UserID"
                    }
                  },
                  "required": [
                    "userID"
                  ]
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/authenticate": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate as a user (see /auth/authenticate-browser if you are the frontend)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateOK"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/authenticate-browser": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate and store the token in the requesting browser's cookie jar",
        "description": "This sets a cookie authenticating you as the given user. The cookie will only work on plantopo.com",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "$ref": "#/components/schemas/SetSessionCookieHeader"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateBrowserOK"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/revoke": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Revoke a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRevokeReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/revoke-browser": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Revoke the token stored in the requesting browser's cookie jar",
        "description": "Revokes the cookie set by /auth/authenticate-browser",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register a new account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateOK"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/auth/register-browser": {
      "post": {
        "summary": "Register a new account and store the token in the requesting browser's cookie jar",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "$ref": "#/components/schemas/SetSessionCookieHeader"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateBrowserOK"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    },
    "/elevation": {
      "post": {
        "tags": [
          "elevation"
        ],
        "summary": "Lookup elevations for a list of coordinates",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ElevationPostReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElevationPostOK"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/DefaultErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "browser": {
        "type": "apiKey",
        "in": "cookie",
        "name": "session"
      }
    },
    "responses": {
      "DefaultErrorResponse": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DefaultError"
            }
          }
        }
      }
    },
    "schemas": {
      "AuthRegisterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "Empty": {
        "type": "object"
      },
      "DefaultError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "retryAfterSeconds": {
            "type": "integer"
          },
          "validationErrors": {
            "$ref": "#/components/schemas/ValidationErrors"
          }
        },
        "required": [
          "message"
        ],
        "example": {
          "error": {
            "message": "internal server error (correlation id cor_e0a3b2628acbb22dad4696acaf30be88)"
          }
        }
      },
      "ValidationErrors": {
        "type": "object",
        "properties": {
          "generalErrors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "AuthenticateReq": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AuthenticateOK": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "token",
          "user"
        ]
      },
      "AuthenticateBrowserOK": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "user"
        ]
      },
      "AuthRevokeReq": {
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/Token"
          }
        },
        "required": [
          "token"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UserID"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "emailConfirmed": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "email"
        ]
      },
      "UserID": {
        "type": "string",
        "example": "u_248h248h248h248h248h248h24"
      },
      "Token": {
        "type": "string",
        "example": "plantoposecret_db480e5c2aa6f443ff721116b352e88c396351fd20eee0c95ed272cba311edd6890f6759931d2cdca4acb16d90a8d2af0ee9af83b35446fda1c8e272fa378462"
      },
      "SetSessionCookieHeader": {
        "type": "string",
        "example": "session=plantoposecret_db480e5c2aa6f443ff721116b352e88c396351fd20eee0c95ed272cba311edd6890f6759931d2cdca4acb16d90a8d2af0ee9af83b35446fda1c8e272fa378462; ..."
      },
      "ElevationPostReq": {
        "type": "object",
        "properties": {
          "coordinates": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        },
        "example": {
          "coordinates": [
            [
              -105.883643,
              40.176097
            ],
            [
              -105.861114,
              40.150743
            ],
            [
              -105.822319,
              40.14182
            ]
          ]
        },
        "required": [
          "coordinates"
        ]
      },
      "ElevationPostOK": {
        "type": "object",
        "properties": {
          "elevation": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "elevation"
        ],
        "example": {
          "elevation": [
            2518,
            2518,
            2518
          ]
        }
      },
      "Timestamp": {
        "type": "string",
        "example": "2024-04-12T23:20:50.52Z"
      }
    }
  }
}