// Code generated by sync_schema/gen. DO NOT EDIT.

type Geometry = PointGeometry | LineStringGeometry;
type PointGeometry = { type: "Point"; coordinates: [number, number] };
type LineStringGeometry = {
  type: "LineString";
  coordinates: [number, number][];
};

export interface Feature {
  id: string;
  parent?: string | null;
  idx?: string | null;
  geometry?: Geometry | null;
  name?: string | null;
  color?: string | null;
  hidden?: boolean | null;
}

export function mergeFeatures(target: Feature, incoming: Feature) {
  if (incoming.id !== target.id) {
    throw new Error("cannot merge Features: id differs");
  }
  if (incoming.parent !== undefined) {
    target.parent = incoming.parent;
  }
  if (incoming.idx !== undefined) {
    target.idx = incoming.idx;
  }
  if (incoming.geometry !== undefined) {
    target.geometry = incoming.geometry;
  }
  if (incoming.name !== undefined) {
    target.name = incoming.name;
  }
  if (incoming.color !== undefined) {
    target.color = incoming.color;
  }
  if (incoming.hidden !== undefined) {
    target.hidden = incoming.hidden;
  }
}
export interface Layer {
  id: string;
  idx?: string | null;
  opacity?: number | null;
}

export function mergeLayers(target: Layer, incoming: Layer) {
  if (incoming.id !== target.id) {
    throw new Error("cannot merge Layers: id differs");
  }
  if (incoming.idx !== undefined) {
    target.idx = incoming.idx;
  }
  if (incoming.opacity !== undefined) {
    target.opacity = incoming.opacity;
  }
}
