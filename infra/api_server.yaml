apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-server-ingress
  labels:
    app: api-server
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
    - host: "{{ .Values.apiDomain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: internal-api
                port: { name: http }
  tls:
    - secretName: api-cert
      hosts:
        - "{{ .Values.apiDomain }}"
---
apiVersion: v1
kind: Service
metadata:
  name: internal-api
  labels:
    app: api-server
spec:
  type: ClusterIP
  selector:
    app: api-server
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
  labels:
    app: api-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      name: api-server
      labels:
        app: api-server
        ver: "{{ .Values.ver }}"
    spec:
      containers:
        - name: api-server
          image: "{{ .Values.image }}"
          env:
            - name: PORT
              value: "8080"
            - name: APP_ENV
              value: "{{ .Values.env }}"
            - name: IMPORT_UPLOADS_BUCKET
              value: "{{ .Values.importUploadBucket }}"
            - name: EXPORT_BUCKET
              value: "{{ .Values.exportBucket }}"
            - name: PERMITTED_ORIGINS
              value: "{{ .Values.permittedOrigins }}"
            - name: API_DOMAIN
              value: "{{ .Values.apiDomain }}"
            - name: PT_MAILGUN_KEY
              valueFrom:
                secretKeyRef:
                  key: PT_MAILGUN_KEY
                  name: api-server
            - name: PT_EMAILABLE_KEY
              valueFrom:
                secretKeyRef:
                  key: PT_EMAILABLE_KEY
                  name: api-server
            - name: SESSION_AUTHENTICATION_KEY
              valueFrom:
                secretKeyRef:
                  key: SESSION_AUTHENTICATION_KEY
                  name: api-server
            - name: PT_FRONTEND_MAP_TOKENS
              valueFrom:
                secretKeyRef:
                  key: PT_FRONTEND_MAP_TOKENS
                  name: api-server
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: AWS_ACCESS_KEY_ID
                  name: api-server
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: AWS_SECRET_ACCESS_KEY
                  name: api-server
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: DATABASE_URL
                  name: db
            - name: BACKEND_TOKEN
              valueFrom:
                secretKeyRef:
                  name: backend-token
                  key: token
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: /api/v1/healthz
              port: http
            periodSeconds: 5
