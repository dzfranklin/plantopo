import Config

config :plantopo, :redis_url, "redis://localhost:6379/0"

config :plantopo, PlanTopo.Sync,
  host: "localhost",
  secret_key_base: "OsCGgV1gKEAFQucqljKYIyXcXcQ8HufXfY8+XDc5mPzEXuXVDdcu+DywKdZUPJX/"

config :plantopo, :sync_engine,
  log_level: "info,pt_sync_engine=debug",
  executable: "./run_sync_engine.sh"

config :opentelemetry, traces_exporter: :none

aws_cred_value = fn key ->
  {value, 0} =
    System.cmd("bash", ["-c", "aws --profile test configure export-credentials | jq .#{key}"])

  value
  |> String.trim()
  |> String.trim("\"")
  |> String.to_charlist()
end

config :aws_credentials,
  aws_access_key_id: aws_cred_value.("AccessKeyId"),
  aws_secret_access_key: aws_cred_value.("SecretAccessKey"),
  aws_session_token: aws_cred_value.("SessionToken"),
  aws_region: ~c"eu-west-2"

config :plantopo, PlanTopo.Maps,
  frontend_tokens: [
    mapbox: System.fetch_env!("PLANTOPO_MAPBOX_ACCESS_TOKEN"),
    os: System.fetch_env!("PLANTOPO_OS_API_KEY"),
    maptiler: System.fetch_env!("PLANTOPO_MAPTILER_KEY")
  ]

# Configure your database
config :plantopo, PlanTopo.Repo,
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :plantopo, PlanTopoWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {0, 0, 0, 0}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: false,
  secret_key_base: "jdF2PrDJSIR0K1P2BPftQiWCBjwv1QiaLdxjOaRE7YQKv+rOHklskiPtS4feBJdn",
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :plantopo, PlanTopoWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/plantopo_web/(controllers|live|components)/.*(ex|heex)$"
    ]
  ]

# Enable dev routes for dashboard and mailbox
config :plantopo, dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false
